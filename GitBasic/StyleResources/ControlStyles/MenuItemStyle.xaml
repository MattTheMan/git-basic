<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:GitBasic.StyleResources.ControlStyles"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseControlStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="MenuItemStyle"
        BasedOn="{StaticResource BaseControlStyle}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="Border"
                        Margin="{TemplateBinding Margin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle
                                x:Name="SelectedIndicator"
                                HorizontalAlignment="Stretch"
                                Fill="{DynamicResource MenuItemSelectedBackgroundBrush}"
                                Stroke="{DynamicResource MenuItemSelectedBorderBrush}"
                                Visibility="Collapsed" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        x:Name="Col0"
                                        Width="Auto"
                                        MinWidth="25"
                                        SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                    <ColumnDefinition x:Name="Col3" Width="24" />

                                </Grid.ColumnDefinitions>
                                <!--  Icon  -->
                                <ContentPresenter
                                    x:Name="Icon"
                                    Grid.Column="0"
                                    Margin="4,0,6,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon" />
                                <!--  Checkmark for checkable menu item  -->
                                <Grid
                                    x:Name="GlyphPanel"
                                    Grid.Column="0"
                                    Margin="4,0,6,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Visibility="Hidden">
                                    <Path
                                        x:Name="GlyphPanelpath"
                                        VerticalAlignment="Center"
                                        Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                        Fill="{TemplateBinding Foreground}"
                                        FlowDirection="LeftToRight" />
                                </Grid>
                                <!--  Content for the menu text etc  -->
                                <ContentPresenter
                                    x:Name="HeaderHost"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                                <!--  Input Gesture Text (hotkey)  -->
                                <ContentPresenter
                                    x:Name="IGTHost"
                                    Grid.Column="2"
                                    Margin="25,0,0,0"
                                    VerticalAlignment="Center"
                                    ContentSource="InputGestureText" />
                                <!--  Arrow drawn path which points to the next level of the menu  -->
                                <Grid
                                    x:Name="ArrowPanel"
                                    Grid.Column="3"
                                    Margin="0,0,9,0"
                                    VerticalAlignment="Center">
                                    <Path
                                        x:Name="ArrowPanelPath"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Data="M0,0 L0,8 L4,4 z"
                                        Fill="{TemplateBinding Foreground}" />
                                </Grid>
                                <!--  Submenu  -->
                                <Popup
                                    x:Name="SubMenuPopup"
                                    Focusable="false"
                                    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Right"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border
                                        x:Name="SubMenuBorder"
                                        Padding="2"
                                        Background="{Binding Path=Background, ElementName=Border}"
                                        BorderBrush="{Binding Path=BorderBrush, ElementName=Border}"
                                        BorderThickness="1">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <!--  StackPanel holds children of the menu. This is set by IsItemsHost=True  -->
                                            <StackPanel
                                                Grid.IsSharedSizeScope="True"
                                                IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Style="{x:Null}" />
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                            <Rectangle
                                x:Name="DisabledIndicator"
                                Margin="1"
                                HorizontalAlignment="Stretch"
                                Fill="{DynamicResource MenuItemDisabledBackgroundBrush}"
                                Stroke="{DynamicResource MenuItemDisabledBorderBrush}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>

                    <!--  These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role  -->
                    <ControlTemplate.Triggers>
                        <!--  Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down  -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,1,6,1" />
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Col0" Property="MinWidth" Value="0" />
                            <Setter TargetName="Col3" Property="Width" Value="Auto" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  Role = TopLevelItem :  this is a child menu item from the top level without any child items  -->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,1,6,1" />
                            <Setter Property="Width" Value="110" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Role = SubMenuHeader : this is a child menu item which does not have children  -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                        </Trigger>

                        <!--  Role = SubMenuItem : this is a child menu item which has children  -->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="False">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>

                        <!--  If no Icon, collapse the Icon Content  -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Toggle checkmark  -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="SelectedIndicator" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledIndicator" Property="Visibility" Value="Visible" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>